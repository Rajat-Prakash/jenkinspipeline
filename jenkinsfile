// pipeline{
// agent any
//
// stages {
//       stage('Publish SNS') {
//          steps {
//             echo 'Publishing SNS message to AWS'
//             withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                 // do something
//                 echo 'SNS running'
//                 //aws sns publish --topic-arn arn:aws:sns:us-east-1:572411739171:mailNotification --message "Hello World!"
//                 //amazonSNS.publish("arn:aws:sns:us-east-1:572411739171:mailNotification", "Hello World!")
//                 snsPublish(topicArn:'arn:aws:sns:us-east-1:572411739171:mailNotification', subject:'my subject', message:'this is your message')
//             }
//          }
//       }
//    }
//    }
//

pipeline{
 agent any


//Defining tools needed in Pipeline
//   tools {
//     maven 'maven'
//
//   }

//Setting up environment for SonarQube- To be used when PS SonarQube is used
//   environment{
//     sonar_token=credentials("sonar_token_product_phase")
//     dojo_sonar_url= 'https://tools.publicis.sapient.com/sonar'
//   }


//Stages start here
stages{

        stage('Compile and Clean'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml clean compile"
                       }
                       catch(all){
                            echo "Install stage Failed"
//                                                         echo 'Publishing SNS message to AWS'
//                                                         withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                                                               // do something
//                                                                               echo 'SNS running'
//                                                         }
                       }
                }
            }
        }

        stage('Test'){
              steps{
                  script{
                         try{
                              bat " mvn -f pom.xml test"
                         }
                         catch(all){
                              echo "Install stage Failed"
//                                                           echo 'Publishing SNS message to AWS'
//                                                           withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                                                                 // do something
//                                                                                 echo 'SNS running'
//                                                           }
                         }
                  }
             }
        }

        stage('Maven Build'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml package"
                       }
                       catch(all){
                            echo "Install stage Failed"
//                                                         echo 'Publishing SNS message to AWS'
//                                                         withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                                                               // do something
//                                                                               echo 'SNS running'
//                                                         }
                       }
                }
            }
        }

        stage('Verify'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml verify"
                       }
                       catch(all){
                            echo "Install stage Failed"
//                                                         echo 'Publishing SNS message to AWS'
//                                                         withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                                                               // do something
//                                                                               echo 'SNS running'
//                                                         }
                       }
                }
            }
        }


        stage('Install'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml install"
                       }
                       catch(all){
                            echo "Install stage Failed"
                            echo 'Publishing SNS message to AWS'
//                             withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                                  // do something
//                                                  echo 'SNS running'
//                             }
                       }
                }
            }
        }

        stage("Test and Jacoco Static analysis"){
            steps{
                script{
                try{
                                           junit 'target/surefire-reports/**/*.xml'
                                           jacoco()
                                       }
                                       catch(all){
                                           echo "Install stage Failed"
//                                                                        echo 'Publishing SNS message to AWS'
//                                                                        withAWS(credentials:'45472be1-a363-45a4-97a3-a65abf4f1bc4') {
//                                                                              // do something
//                                                                                              echo 'SNS running'
//                                                                        }
                                       }
                }


            }

        }



//         stage('Build Docker'){
//             steps{
//                 script{
//                      bat "docker build -f dockerfile -t prodDevMicroService . "
//                 }
//             }
//         }
//
//         stage('Push Docker image'){
//             steps{
//                 script {
//                     docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
//                            myapp.push("latest")
//                            myapp.push("${env.BUILD_ID}")
//                        }
//                 }
//             }
//         }
//
//         stage('Deployment on Kubernetes'){
//             steps{
//                 scripts{
//                     kubernetesDeploy(configs: "", kubeconfigId: "mykubeConfig")
//                 }
//             }
//         }

  }


}